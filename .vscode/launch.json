{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Remote Train vismvsnet with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--training_type",
                "mvd",
                "--output",
                "/misc/lmbraid19/barkes/robustmvd/training/vis_mvsnet/debug_run",
                "--num_gpus",
                "1",
                "--batch_size",
                "2",
                "--max_iterations",
                "200000",
                "--model",
                "vis_mvsnet",
                "--inputs",
                "poses",
                "intrinsics",
                "depth_range",
                "masks",
                "--optimizer",
                "adam",
                "--lr",
                "1e-4",
                "--loss",
                "VismvnsetMultiscaleMultiviewAggregate",
                "--dataset",
                "dtu.vismvsnet.mvd",
                "--input_size",
                "512",
                "640",
                "--target_size",
                "256",
                "320",
                "--scheduler",
                "flownet_scheduler",
                "--no_tensorboard"
            ],
        },
        {
            "name": "Python: Remote Train mvsnet with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--training_type",
                "mvd",
                "--output",
                "/work/dlclarge1/barkes-barke-master/robustmvd/debug/training/mvsnet/debug_mvsnet_output_sizes",
                "--num_gpus",
                "1",
                "--batch_size",
                "1",
                "--max_iterations",
                "200000",
                "--model",
                "mvsnet_blendedmvs",
                "--inputs",
                "poses",
                "intrinsics",
                // "depth_range",
                // "masks",
                "--optimizer",
                "adam", //change this
                "--lr",
                "1e-4",
                "--loss",
                "mvsnet_loss",
                "--dataset",
                "blendedmvs.train_mvsnet.mvd",
                "--input_size",
                "128",
                "160",
                "--scheduler",
                "flownet_scheduler",
                "--log_interval",
                "100",
                // "--augmentations",
                // "mvsnet_augmentations"
            ],
        },
        {
            "name": "Python: Remote Train mvsnet_dispnet_decoder_3ddown with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--training_type",
                "mvd",
                "--output",
                "/work/dlclarge1/barkes-barke-master/robustmvd/debug/training/mvsnet_dispnet_decoder_3ddown/debug_run_1",
                "--num_gpus",
                "1",
                "--batch_size",
                "1",
                "--max_iterations",
                "200000",
                "--model",
                "mvsnet_dispnet_decoder_3d_downsample",
                "--inputs",
                "poses",
                "intrinsics",
                "depth_range",
                // "masks",
                "--optimizer",
                "adam", //change this
                "--lr",
                "1e-4",
                "--loss",
                "mvsnet_loss",
                "--dataset",
                "blendedmvs.train_mvsnet.mvd",
                "--scheduler",
                "mvsnet_scheduler",
                "--log_interval",
                "100",
                "--augmentations",
                "mvsnet_augmentations"
            ],
        },
        {
            "name": "Python: Remote Train robust_mvd_mvsnet_encoder with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--training_type",
                "mvd",
                "--output",
                "/work/dlclarge1/barkes-barke-master/robustmvd/debug/training/robust_mvd_mvsnet_encoder/debug_run_1",
                "--log_interval",
                "100",
                "--num_gpus",
                "1",
                "--batch_size",
                "1",
                "--max_iterations",
                "600000",
                "--model",
                "robust_mvd_mvsnet_encoder",
                "--inputs",
                "poses",
                "intrinsics",
                //"depth_range",
                "--optimizer",
                "adam",
                "--lr",
                "1e-4",
                "--loss",
                "robust_mvd_loss",
                "--dataset",
                "blendedmvs.robust_mvd.mvd",
                "--scheduler",
                "flownet_scheduler",
                "--augmentations",
                "robust_mvd_augmentations_blendedmvs",
                "--batch_augmentations",
                "robust_mvd_batch_augmentations"
            ],
        },
        {
            "name": "Python: Remote Train robustmvd with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--training_type",
                "mvd",
                "--output",
                "/work/dlclarge1/barkes-barke-master/robustmvd/debug/training/rmvd/debug_rmvd_output_sizes",
                "--log_interval",
                "100",
                "--num_gpus",
                "1",
                "--batch_size",
                "1",
                "--max_iterations",
                "600000",
                "--model",
                "robust_mvd",
                "--inputs",
                "poses",
                "intrinsics",
                //"depth_range",
                "--optimizer",
                "adam",
                "--lr",
                "1e-4",
                "--loss",
                "robust_mvd_loss",
                "--dataset",
                "blendedmvs.train_mvsnet.mvd",
                "--input_size",
                "128",
                "160",
                "--scheduler",
                "flownet_scheduler",
                "--no_tensorboard"
            ],
        },
        {
            "name": "Python: Remote Eval mvsnet with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/eval.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "mvsnet_train",
                "--eval_type",
                "robustmvd",
                "--inputs",
                "poses",
                "intrinsics",
                "depth_range",
                "--output",
                "/work/dlclarge1/barkes-barke-master/robustmvd/debug/evaluation/mvsnet/debug_mvsnet_sai_bmvs_160000",
                "--num_gpus",
                "1",
                "--max_source_views",
                "2",
                "--weights",
                "/work/dlclarge1/barkes-barke-master/robustmvd/training/mvsnet/train_mvsn_bmvs_sai/weights_only_checkpoints_dir/snapshot-iter-000160000.pt",
            ],
        },
        {
            "name": "Python: Remote Eval vis_mvsnet_wrapped with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/eval.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "vis_mvsnet_wrapped",
                "--dataset",
                "dtu",
                "--eval_type",
                "mvd",
                "--inputs",
                "poses",
                "intrinsics",
                "--output",
                "/tmp/eval_output",
                "--input_size",
                "896",
                "1216"
            ],
            "env": {
                "CUDA_VISIBLE_DEVICES": "1"
            }
        },
        {
            "name": "Python: Remote Eval mvsnet_pl_wrapped with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/eval.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "mvsnet_pl_wrapped",
                "--dataset",
                "dtu",
                "--eval_type",
                "mvd",
                "--inputs",
                "poses",
                "intrinsics",
                "--output",
                "/tmp/eval_output",
                "--input_size",
                "896",
                "1216"
            ],
            "env": {
                "CUDA_VISIBLE_DEVICES": "1"
            }
        },
        {
            "name": "Python: Remote Eval cvp_mvsnet_wrapped with Args",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/eval.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "cvp_mvsnet_wrapped",
                "--dataset",
                "dtu",
                "--eval_type",
                "mvd",
                "--inputs",
                "poses",
                "intrinsics",
                "--output",
                "/tmp/eval_output",
                "--input_size",
                "896",
                "1216"
            ],
            "env": {
                "CUDA_VISIBLE_DEVICES": "1"
            }
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
        },
    ]
}